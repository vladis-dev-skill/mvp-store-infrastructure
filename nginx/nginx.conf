# Nginx API Gateway Configuration for MVP Store
resolver 127.0.0.11 valid=30s;  # Docker DNS

# Rate limiting
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=payment_limit:10m rate=50r/m;

# Upstream definitions are in upstream.conf

server {
    listen 80;
    server_name localhost api.mvp-store.local backend.mvp-store.local payment.mvp-store.local;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 '{"status":"healthy","service":"api-gateway"}';
        add_header Content-Type application/json;
    }

    # Backend API routes - removes /api prefix when proxying to backend
    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;

        # Add correlation ID for tracing
        set $correlation_id $request_id;
        proxy_set_header X-Correlation-ID $correlation_id;

        # Remove /api prefix: /api/health -> /health
        rewrite ^/api/(.*) /$1 break;

        proxy_pass http://backend_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Fault tolerance settings
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 10s;

        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # Root endpoint - optional, can show API info or redirect to /api
    location = / {
        return 200 '{"message":"MVP Store API Gateway","version":"1.0","endpoints":{"/api/":"Backend API","/api/payment/":"Payment API","/health":"Gateway health"}}';
        add_header Content-Type application/json;
    }

    # Payment service routes
    location /api/payment/ {
        limit_req zone=payment_limit burst=10 nodelay;

        # Add correlation ID for tracing
        set $correlation_id $request_id;
        proxy_set_header X-Correlation-ID $correlation_id;

        proxy_pass http://payment_upstream/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Stricter timeout for payment operations
        proxy_connect_timeout 3s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 15s;
    }

    # Internal API for inter-service communication
    location /inner-api/payment/ {
        # Only allow internal network access
        allow 172.16.0.0/12;
        allow 10.0.0.0/8;
        deny all;

        proxy_pass http://payment_upstream/inner-api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Service-Name "mvp-store-backend";

        # Fast timeout for internal communication
        proxy_connect_timeout 2s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }

    # Note: Health checks are now handled through the main /api/ location
    # /api/health -> backend health
    # /api/payment/health -> payment service health

    # Error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        return 502 '{"error":"Service temporarily unavailable","correlation_id":"$request_id"}';
        add_header Content-Type application/json;
    }

    # Logging
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;
}